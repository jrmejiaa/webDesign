/* It is known as SELECTOR, it ues to make every label in HTML to make a style of this element. However, it uses the attribute to enter an ID when there are more than one label (like section in HTML) in you want to make different style for every part

ID Example
#siteHeader{
    -- The id is just for one label
    -- Property: Value
    background-color:  blue;
} 

CLASS Example
.classHouses{
    -- The class can be used in all the label that we want
    background-color:  blue;
}
*/
html{
    box-sizing: border-box;
    font-size: 62.5%; /* Reset para REMS - 62.5% = 10px */
}
*, *:before, *:after{
    box-sizing: inherit;
}
body{
    font-family: 'Lato', sans-serif;
    font-size: 1.6rem;
    line-height: 2;
}

/* Global classes */
img{
    max-width: 100%;
}
.container{
    width: 95%;
    max-width: 120rem;
    /* top - right - end - left */
    margin: 0 auto;
}
/* Define the size of every header in the website */
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 3.4rem;
}
h3{
    font-size: 3rem;
}
h4{
    font-size: 2.6rem;
}

/* Utilities */
.section{
    margin-top: 2rem;
    margin-bottom: 2rem;
}
.fw-300{
    font-weight: 300;
    
}
.centerText{
    text-align: center;
}
.dblock{
    display: block!important;
}
.containerCenter{
    max-width: 80rem;
}
/* Button */
.button{
    color: white;
    text-decoration: none;
    font-weight: 700;
    font-size: 1.8rem;
    padding: 1rem 3rem;
    margin-top: 3rem;
    display: inline-block;
    text-align: center;
    border: none;
    display: block;
    flex: 0 0 100%;
}
@media (min-width: 768px){
    .button{
        display: inline-block;
        flex: 0 0 auto;
    }
}
.button:hover{
    cursor: pointer;
} 
.buttonYellow{
    background: #E08709;
}
.buttonGreen{
    background: #71B100;
}

/* HEADER */
.siteHeader{
    background-color: #333333;
    padding: 1rem 0 3rem 0;
}
.siteHeader.begin{
    background: url(../img/header.jpg);
    background-size: cover;
    height: 100vh;
    min-height: 60rem;

}
.contentHeader{
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
}
@media (min-width: 768px){
    .contentHeader{
        text-align: left;
    }
}
.contentHeader h1{
    color: white;
    padding-bottom: 2rem;
    max-width: 60rem;
    line-height: 1.8;
}
.bar{
    padding-top: 3rem;
}
@media (min-width: 768px){
    .bar{
        /* Flexbox to make the initial bar */
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
}

/* Navigation, the a is to specify that the changes are to those label inside of the father label*/
.navigation a{
    color: white;
    text-decoration: none;
    font-size: 2.2rem;
    display: block;
}
@media (min-width: 768px){
    .navigation a{
        display: inline-block;
        margin-right: 2rem;
        font-size: 1.8rem;
    }
    .navigation a:last-of-type{
        margin: 0;
    }
}
.navigation a:hover{
    color: yellowgreen;
}
.navigation{
    display: block;
}
/* Icons Nosotros */
@media (min-width: 768px){
    .iconsNosotros{
        display: flex;
        justify-content: space-between;
    
    }
}
.icon{
    text-align: center;
}
@media (min-width: 768 px){
    .icon{
        flex-basis: calc(33.3% - 1rem);
    }
}

.icon h3{
    text-transform: uppercase;
}
/* Anuncios */
@media (min-width: 768px){
    .containerAnuncios{
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }
}
.anuncio{ 
    border: 0.1rem solid #B5B5B5;
    background: #F5F5F5;
    margin-bottom: 2rem;
}
@media (min-width: 768px){
    .anuncio{
    /* flex-shrink it is not going to make the things smaller, it is going to respect the basis calculation it can be located in just one command the three parts: 
    flex-grow: 0; flex-shrink: 0; flex-basis: calc(33.3% - 1rem);;*/
    flex: 0 0 calc(33.3% - 1rem);
    }
}
.contentAnuncio{
    padding: 2rem;
}
.contentAnuncio h3,
.contentAnuncio p{
    margin: 0;
}
.price{
    color: #71B100;
    font-weight: 700;
}
.iconsChar{
    list-style: none;
    padding: 0;
    display: flex;
    justify-content: space-evenly;
    flex: 1;
    max-width: 50rem;
}
.iconsChar li{
    display: flex;
}
.iconsChar li img{
    margin-right: 2rem;
}
.verTodas{
    display: flex;
    justify-content: flex-end;
}
/* Contact Home */
.contactImage{
    background-image: url(../img/encuentra.jpg);
    height: 40rem;
    background-position: center center;
    background-size: cover;
    display: flex;
    align-items: center;
}
.contentContact{
    flex: 0 0 95%;
    color: white;
}
.contentContact p{
    font-size: 1.8rem;
}
/* Inferior section */
@media (min-width: 768px){
    .inferiorSection{
        display: flex;
        justify-content: space-between;
    }
    .inferiorSection .blog{
        flex-basis: 60%;
    }
    .inferiorSection .testimonials{
        flex-basis: calc(40% - 1rem);
    }
}
.entryBlog{
    margin-bottom: 2rem;
}
@media (min-width: 768px){
    .entryBlog{
        display: flex;
        justify-content: space-between;
    }    
}
.entryBlog:last-of-type{
    margin-bottom: 0;
}
@media (min-width: 768px){
    .entryBlog .entryImg{
        flex-basis: 40%;
    }
    .entryBlog .entryText{
        flex-basis: calc(60% - 3rem);
    }    
}
.entryText h4{
    margin: 0;
    line-height: 1.4;
}
.entryText h4::after{
    /* Pseudo-element to create the line after the text. It uses the display block to create a block and then uses the properties width and height to give it the size */
    content: "";
    display: block;
    width: 15rem;
    height: 0.5rem;
    background-color: #71B100;
    margin-top: 1rem;
}
.entryText span{
    color: #E08709;
}
.entryText a{
    color: black;
    text-decoration: none;
}
/* Testimonials */
.testimonial{
    background-color: #71B100;
    font-size: 2rem;
    padding: 1.5rem;
    color: white;
    border-radius: 2rem;
}
@media (min-width: 768px){
    .testimonial{
        font-size: 2.4rem;
        padding: 2rem;
    }
}
.testimonial p{
    text-align: right;
}
.testimonial blockquote::before{
    /* Pseudo-element before to create an object before some specific element, in this case would be blockquote. It can be used with an image as in this case, but we should let the object a size. */
    content: "";
    background-image: url(../img/comilla.svg);
    width: 4rem;
    height: 4rem;
    /* Position relative (in the object that you want to move) and absolute (in the element where it should start the position) are two values from the property position to move an element with freedom in the space of the webpage to create a realtive position between them*/
    position: absolute;
    left: -2rem;
}
.testimonial blockquote{
    position: relative;
    padding-left: 5rem;
    font-weight: 300;
}
/* FOOTER */
.siteFooter{
    background-color: #333333;
    margin-bottom: 0;
}
.containerFooter{
    padding: 3rem 0;
    text-align: center;
}
@media (min-width: 768px){
    .containerFooter{
        display: flex;
        justify-content: space-between;
    }
}
.siteFooter nav{
    display: none;
}
@media (min-width: 768px){
    .siteFooter nav{
        display: block;
    }
}
.copyright{
    margin: 0;
    color: white;
}
/* Internas */
/* Nosotros */
@media (min-width: 768px){
    .nosotrosContent{
        display: grid;
        grid-template-columns: repeat(2,1fr);
        grid-column-gap: 2rem;
    }    
}

.textNosotros blockquote{
    font-weight: 900;
    font-size: 2rem;
    margin: 0;
    padding: 1rem 0 3rem 0;
}
/* Anuncio */
.summaryProperty{
    display: flex;
    justify-content: space-between;
    align-items: center;
}
/* Contacto */
label{
    display: block;
    font-weight: 700;
    text-transform: uppercase;
}
form p{
    font-size: 1.2rem;
    color: #4f4f4f;
    margin: 2rem 0 0 0;
}
legend{
    font-size: 2rem;
    color: #333333;
}
input:not([type="submit"]),
textarea,
select{
    padding: 1rem;
    display: block;
    width: 100%;
    background-color: #E1E1E1;
    margin-bottom: 1rem;
    border: none;
    border-radius: 1rem;
}
input[type=radio]{
    width: auto;
    margin: 0;
}
select{
    -webkit-appearance: none;
    appearance: none;
}
textarea{
    height: 20rem;
}
.formContact{
    max-width: 30rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}